\import CH1.Def.def
\import CH2.Chpt.sec4

-- 2.8 The unit type

-- We will just quickly prove the equality type of elements of the unit type.
-- Theorem 2.8.1
\func OneISO (x y : One) :  (x = y) ISO One => (One=func x y, One=func_isequiv x y)

\func One=func (x y : One) : (x = y) -> One => \lam p => One.star
-- helper1 is the inverse to One=func, hepter2 is counit One=func o helper1 ~ id, helper3 is unit helper1 o One=func ~ id)
\func One=func_isequiv (x y : One) : isequiv (One=func x y) => qinv_to_isequiv (One=func x y) (helper1 x y, helper2 x y, helper3 x y)
    \where {
      \func helper1 (x y : One) : One -> (x = y) \elim x, y | star, star => \lam x => idp

      \func helper2 (x y : One) (alpha : One) : ((One=func x y) o (helper1 x y)) alpha = alpha \elim x, y, alpha
        | star, star, star => idp

      \func helper3 (x y : One) (p : x = y) : ((helper1 x y) o (One=func x y)) p = p \elim x, p | star, idp => idp


    }
