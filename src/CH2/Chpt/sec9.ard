\import CH2.Chpt.sec4

-- 2.9 Pi-types and function extensionality

-- Defenition 2.9.2 (happly)

\func happly {A : \Type} {B : A -> \Type} {f g : \Pi (x : A) -> B x} (p : f = g): \Pi (x : A) -> (f x = g x) =>
  \lam x => path (\lam i => (p @ i) x)

-- "Axiom" 2.9.3 (function extensionality)

\func funext {A : \Type} {B : A -> \Type} {f g : \Pi (x : A) -> B x} (p : \Pi (x : A) -> (f x = g x)): f = g =>
  path (\lam i => \lam a => p a @ i)

\func pi_eq_uniq {A : \Type} {B : A -> \Type} (f g : \Pi (x : A) -> B x) : isequiv (happly {A} {B} {f} {g}) =>
  qinv_to_isequiv (happly {A} {B}) (\lam p => funext {A} {B} p, \lam p => idp, \lam p => idp)