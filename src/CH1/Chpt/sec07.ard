-- The general coproduct type:
{-
  We will now run through the rules for introducing a type
  0) Formation Rule
  1) Construction Rules
  2) Type eliminators
  3) Computation Rules
 -}
-- 0)
-- Here we use the injections as constructors

\data \infix 6 || (A B : \Type)
  | in0 A
  | in1 B

-- 1)

\cons ex||A {A B : \Type} (a : A) : A || B => in0 a

\cons ex||B {A B : \Type} (b : B) : A || B => in1 b

-- 2)
-- 3)
-- First we must define the coproduct

\func recA||B {A B : \Type}
              (C : \Type) (g0 : A -> C) (g1 : B -> C) (x : A || B) : C \elim x
  | in0 a => g0 a
  | in1 b => g1 b
  | _ => {?}

\func indA||B {A B : \Type}
              (C : (A || B) -> \Type) (g0 : \Pi(a : A) -> C (in0 a))
              (g1 : \Pi (b : B) -> C (in1 b)) (x : A || B) : C x \elim x
  | in0 a => g0 a
  | in1 b => g1 b
  | _ => {?}

-- The nullary type on this is Zero which is given like:

\data Zero

\func recZero (C : \Type) (z : Zero) : C \elim z
  | _ => {?}

\func indZero (C : Zero -> \Type) (z : Zero) : C z \elim z
  | _ => {?}
